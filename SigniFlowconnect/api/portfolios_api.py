"""
    SigniFlow OpenAPI Spec v1

    ## SigniFlow API used to automate esignature workflow creation and management.   # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: support@signiflow.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from SigniFlowconnect.api_client import ApiClient, Endpoint as _Endpoint
from SigniFlowconnect.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from SigniFlowconnect.model.create_portfolio_request import CreatePortfolioRequest
from SigniFlowconnect.model.create_portfolio_response import CreatePortfolioResponse
from SigniFlowconnect.model.download_portfolio_request import DownloadPortfolioRequest
from SigniFlowconnect.model.download_portfolio_response import DownloadPortfolioResponse
from SigniFlowconnect.model.link_to_portfolio_request import LinkToPortfolioRequest
from SigniFlowconnect.model.link_to_portfolio_response import LinkToPortfolioResponse
from SigniFlowconnect.model.set_document_order_request import SetDocumentOrderRequest
from SigniFlowconnect.model.set_document_order_response import SetDocumentOrderResponse
from SigniFlowconnect.model.share_portfolio_no_email_request import SharePortfolioNoEmailRequest
from SigniFlowconnect.model.share_portfolio_no_email_response import SharePortfolioNoEmailResponse
from SigniFlowconnect.model.share_portfolio_request import SharePortfolioRequest
from SigniFlowconnect.model.share_portfolio_response import SharePortfolioResponse


class PortfoliosApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __post_create_portfolio(
            self,
            content_type="application/json",
            **kwargs
        ):
            """Create Portfolio  # noqa: E501

            #### Used to create a portfolio to group documents.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_create_portfolio(content_type="application/json", async_req=True)
            >>> result = thread.get()

            Args:
                content_type (str): defaults to "application/json", must be one of ["application/json"]

            Keyword Args:
                create_portfolio_request (CreatePortfolioRequest): ##### Create Portfolio Request Model. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                CreatePortfolioResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['content_type'] = \
                content_type
            return self.call_with_http_info(**kwargs)

        self.post_create_portfolio = _Endpoint(
            settings={
                'response_type': (CreatePortfolioResponse,),
                'auth': [],
                'endpoint_path': '/CreatePortfolio',
                'operation_id': 'post_create_portfolio',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'create_portfolio_request',
                ],
                'required': [
                    'content_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'create_portfolio_request':
                        (CreatePortfolioRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'content_type': 'header',
                    'create_portfolio_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_create_portfolio
        )

        def __post_download_portfolio(
            self,
            content_type="application/json",
            **kwargs
        ):
            """Download Portfolio  # noqa: E501

            #### Used to return a string that is then used to download a portfolio.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_download_portfolio(content_type="application/json", async_req=True)
            >>> result = thread.get()

            Args:
                content_type (str): defaults to "application/json", must be one of ["application/json"]

            Keyword Args:
                download_portfolio_request (DownloadPortfolioRequest): ##### Download Portfolio Request Model. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                DownloadPortfolioResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['content_type'] = \
                content_type
            return self.call_with_http_info(**kwargs)

        self.post_download_portfolio = _Endpoint(
            settings={
                'response_type': (DownloadPortfolioResponse,),
                'auth': [],
                'endpoint_path': '/DownloadPortfolio',
                'operation_id': 'post_download_portfolio',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'download_portfolio_request',
                ],
                'required': [
                    'content_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'download_portfolio_request':
                        (DownloadPortfolioRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'content_type': 'header',
                    'download_portfolio_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_download_portfolio
        )

        def __post_link_to_portfolio(
            self,
            content_type="application/json",
            **kwargs
        ):
            """Link To Portfolio  # noqa: E501

            #### Used to get the url link to a portfolio.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_link_to_portfolio(content_type="application/json", async_req=True)
            >>> result = thread.get()

            Args:
                content_type (str): defaults to "application/json", must be one of ["application/json"]

            Keyword Args:
                link_to_portfolio_request (LinkToPortfolioRequest): ##### Link To Portfolio Request Model. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                LinkToPortfolioResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['content_type'] = \
                content_type
            return self.call_with_http_info(**kwargs)

        self.post_link_to_portfolio = _Endpoint(
            settings={
                'response_type': (LinkToPortfolioResponse,),
                'auth': [],
                'endpoint_path': '/LinkToPortfolio',
                'operation_id': 'post_link_to_portfolio',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'link_to_portfolio_request',
                ],
                'required': [
                    'content_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'link_to_portfolio_request':
                        (LinkToPortfolioRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'content_type': 'header',
                    'link_to_portfolio_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_link_to_portfolio
        )

        def __post_set_document_order(
            self,
            content_type="application/json",
            **kwargs
        ):
            """Set Document Order  # noqa: E501

            #### Used to set the order of documents that needs to be signed.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_set_document_order(content_type="application/json", async_req=True)
            >>> result = thread.get()

            Args:
                content_type (str): defaults to "application/json", must be one of ["application/json"]

            Keyword Args:
                set_document_order_request (SetDocumentOrderRequest): ##### Set Document Order Request Model. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                SetDocumentOrderResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['content_type'] = \
                content_type
            return self.call_with_http_info(**kwargs)

        self.post_set_document_order = _Endpoint(
            settings={
                'response_type': (SetDocumentOrderResponse,),
                'auth': [],
                'endpoint_path': '/SetDocumentOrder',
                'operation_id': 'post_set_document_order',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'set_document_order_request',
                ],
                'required': [
                    'content_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'set_document_order_request':
                        (SetDocumentOrderRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'content_type': 'header',
                    'set_document_order_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_set_document_order
        )

        def __post_share_portfolio(
            self,
            content_type="application/json",
            **kwargs
        ):
            """Share Portfolio  # noqa: E501

            #### Used when a user wants to share a portfolio with someone else.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_share_portfolio(content_type="application/json", async_req=True)
            >>> result = thread.get()

            Args:
                content_type (str): defaults to "application/json", must be one of ["application/json"]

            Keyword Args:
                share_portfolio_request (SharePortfolioRequest): ##### Share Portfolio Request Model. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                SharePortfolioResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['content_type'] = \
                content_type
            return self.call_with_http_info(**kwargs)

        self.post_share_portfolio = _Endpoint(
            settings={
                'response_type': (SharePortfolioResponse,),
                'auth': [],
                'endpoint_path': '/SharePortfolio',
                'operation_id': 'post_share_portfolio',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'share_portfolio_request',
                ],
                'required': [
                    'content_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'share_portfolio_request':
                        (SharePortfolioRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'content_type': 'header',
                    'share_portfolio_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_share_portfolio
        )

        def __post_share_portfolio_no_email(
            self,
            content_type="application/json",
            **kwargs
        ):
            """Share Portfolio No Email  # noqa: E501

            #### Used when a user wants to share a portfolio without sending out an email.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.post_share_portfolio_no_email(content_type="application/json", async_req=True)
            >>> result = thread.get()

            Args:
                content_type (str): defaults to "application/json", must be one of ["application/json"]

            Keyword Args:
                share_portfolio_no_email_request (SharePortfolioNoEmailRequest): ##### Share Portfolio No Email Request Model. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                SharePortfolioNoEmailResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['content_type'] = \
                content_type
            return self.call_with_http_info(**kwargs)

        self.post_share_portfolio_no_email = _Endpoint(
            settings={
                'response_type': (SharePortfolioNoEmailResponse,),
                'auth': [],
                'endpoint_path': '/SharePortfolio_No_Email',
                'operation_id': 'post_share_portfolio_no_email',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'share_portfolio_no_email_request',
                ],
                'required': [
                    'content_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'share_portfolio_no_email_request':
                        (SharePortfolioNoEmailRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                },
                'location_map': {
                    'content_type': 'header',
                    'share_portfolio_no_email_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__post_share_portfolio_no_email
        )
